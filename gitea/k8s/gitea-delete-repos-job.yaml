apiVersion: batch/v1
kind: Job
metadata:
  name: gitea-delete-repos
  namespace: gitea
spec:
  template:
    spec:
      containers:
      - name: gitea-cleanup
        image: mcr.microsoft.com/powershell:latest
        command:
        - "pwsh"
        - "-Command"
        - |
          $token = "8f093b1b5f5e739a092a49518a9de4fcddda283c"
          $gitea_url = "http://gitea-http:3000"
          $repos_url = "$gitea_url/api/v1/user/repos"
          $headers = @{ Authorization = "token $token" }

          try {
              $repos = Invoke-RestMethod -Uri $repos_url -Method GET -Headers $headers
          } catch {
              Write-Host "‚ùå Fehler beim Abrufen der Repository-Liste: $($_.Exception.Message)" -ForegroundColor Red
              exit 1
          }

          if ($repos.Count -eq 0) {
              Write-Host "üöÄ Keine Repositories gefunden." -ForegroundColor Yellow
              exit 0
          }

          foreach ($repo in $repos) {
              $repo_owner = $repo.owner.username
              $repo_name = $repo.name
              $delete_url = "$gitea_url/api/v1/repos/$repo_owner/$repo_name"

              try {
                  Write-Host "üóëÔ∏è L√∂sche Repository: ${repo_owner}/${repo_name} ..." -ForegroundColor Cyan
                  Invoke-RestMethod -Uri $delete_url -Method DELETE -Headers $headers
                  Write-Host "‚úÖ Repository gel√∂scht: ${repo_owner}/${repo_name}" -ForegroundColor Green
              } catch {
                  Write-Host "‚ùå Fehler beim L√∂schen von ${repo_owner}/${repo_name}: $($_.Exception.Message)" -ForegroundColor Red
              }
          }
      restartPolicy: Never
